pipeline {
    agent any
    environment {
        dockerImageName = "simpleapachehttp"
        dockerbuildversion = "$dockerImageName:v$BUILD_NUMBER"
        dockertag = "${env.BUILD_NUMBER}"
        containername = "apachehttpd"
        reg_password = credentials('dockerregistry')
    }
    stages {
        stage('Build_Docker_Image') {
            steps {
                script {
                    echo "=== initialize the docker image Build ==="
                    sh 'docker build -t $dockerImageName/$BUILD_NUMBER:latest -f Dockerfile-alphine .'
                    
                }
            }
        }
        stage('Login_Docker_Registry') {
            steps {
                script {
                    echo "=== initialize the docker Registry ==="
                    withCredentials([string(credentialsId: 'registrysecret', variable: 'DOCKER_PASSWORD')]) {
                        sh "docker login -u jithincm -p $DOCKER_PASSWORD"
                    // some block
                    }
                    //sh "echo '${containername}'"
                    //sh "docker login -u jithincm -p $reg_password"
                }
            }
        }
        stage('Tag_Docker_Image') {
            steps {
                script {
                    echo "=== initialize the docker tagging Image ==="
                    sh 'docker tag $dockerImageName/$BUILD_NUMBER:latest jithincm/apachehttpd'                  
                }
            }
        }        
        stage('Push_Docker_Image') {
            steps {
                script {
                    echo "=== initialize the docker push Image ==="
                    sh 'docker push jithincm/apachehttpd'
                    sleep 10                                    
                }
            }
        }
        stage('Pull_Docker_Image') {
            steps {
                script {
                    echo "=== initialize the docker pull Image ==="
                    sh 'docker pull jithincm/apachehttpd'              
                }
            }
        }
        stage('Run_Docker_Image') {
            steps {
                script {
                    echo "=== initialize the docker Run Image ==="
                    sh 'docker run -d --name httpd -p 100:80 jithincm/apachehttpd'               
                }
            }
        }
        stage('verify_Docker_Image') {
            steps {
                script {
                    echo "=== initialize the docker Verify Image ==="

                    // logout out docker
                    sh 'docker logout'
                    response = httpRequest ignoreSslErrors: true, url: 'http://localhost:100'
                    echo "Request http status is ${response.status}"
                    //sh docker logs <container-id> //
                    def statuscode = "${response.status}"
                    if (statuscode == "200") {
                      echo "****************** Latest Docker Image is Valid Image ***********************"
                    } else {
                      sh 'echo "Invalid Docker Image and verification failed"'
                    }                            
                }
            }
        }     
    }
}